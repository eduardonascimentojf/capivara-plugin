<?xml version="1.0" encoding="UTF-8"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->
<svg width="19" height="19" version="1.1" viewBox="0 0 5.0271 5.0271" xmlns="http://www.w3.org/2000/svg">
 <defs>
  <linearGradient id="gradient_0" x1="345.9" x2="362.93" y1="376.52" y2="395.76" gradientTransform="matrix(.26458 0 0 .26458 462.82 -207.59)" gradientUnits="userSpaceOnUse">
   <stop stop-color="#FEFEF8" stop-opacity=".96863" offset="0"/>
   <stop stop-color="#FEFEFF" offset="1"/>
  </linearGradient>
  <meshgradient id="meshgradient41470" x="-8474.376" y="-3154.6714" gradientTransform="translate(9118.7,3094.2)" gradientUnits="userSpaceOnUse">
   <meshrow>
    <meshpatch>
     <stop stop-color="#fff" path="c 23.2787,0  46.5574,0  69.8361,0"/>
     <stop stop-color="#d6ac7f" path="c 0,34.205  0,68.4099  0,102.615"/>
     <stop stop-color="#fff" path="c -23.2787,0  -46.5574,0  -69.8361,0"/>
     <stop stop-color="#d6ac7f" path="c 0,-34.205  0,-68.4099  0,-102.615"/>
    </meshpatch>
   </meshrow>
  </meshgradient>
  <filter id="filter49399" x="-.13521" y="-.11909" width="1.2704" height="1.2382" color-interpolation-filters="sRGB">
   <feGaussianBlur stdDeviation="0.53777"/>
  </filter>
  <filter id="filter49403" x="-.17167" y="-.13397" width="1.3433" height="1.2679" color-interpolation-filters="sRGB">
   <feGaussianBlur stdDeviation="0.53777"/>
  </filter>
 </defs>
 <g transform="translate(27.827 3.3257)">
  <g transform="matrix(.4884 0 0 .48026 -15.448 -2.7021)">
   <path d="m-24.557-2.3799c0.0357-0.019193 0.06644-0.054756 0.10834-0.059263 0.01159 0.026088 0.01581 0.050878 0.03496 0.072776l0.0127-5.733e-4c1.0588-0.4608 1.8026-0.51679 2.7514-0.66325 0.14534 0.00984 0.2905 0.018224 0.43505 0.03774 0.48331 0.065262 0.97848 0.2082 1.4275 0.40316 0.12937 0.056158 0.25539 0.1219 0.38107 0.1861 0.26882 0.13732 0.52214 0.27545 0.76894 0.4525 1.0221 0.50158 1.3432 1.6234 1.9458 2.2418 0.05794 0.043702 0.11581 0.09037 0.16849 0.14052 0.39586 0.37538 0.619 0.90526 0.61439 1.4589-0.0067 0.49879-0.19453 0.9149-0.50789 1.2875 0.11917 0.17208 0.2276 0.35919 0.3286 0.54297 0.05744 0.10454 0.11712 0.20924 0.16926 0.31665 0.33613 0.69248 0.55275 1.4849 0.55549 2.2605 6.08e-4 0.18168-0.0019 0.35744-0.03144 0.53719-0.09039 0.54964-0.36546 1.038-0.81141 1.3615-0.0657 0.047668-0.14227 0.0847-0.20291 0.13882 0.21745 0.017943 1.0447 0.12939 1.1665 0.28062 0.01564 0.019417 0.02639 0.04327 0.02239 0.069108-0.0054 0.03465-0.03354 0.059388-0.06151 0.075945-0.13167 0.077962-0.44568 0.12782-0.60521 0.15627-0.27851 0.04968-0.55741 0.078962-0.83868 0.10534-0.09157 0.00859-0.18258 0.022737-0.27419 0.030663-0.14874 0.012867-0.29834 0.01961-0.44736 0.028793-1.2994 0.073944-2.6021 0.059456-3.8996-0.043379-0.04706-0.018808-0.15907-0.01787-0.21206-0.016051-3e-3 0.014936 0.01032 0.00997 0 0.02995-0.12662 0.080302-0.37606 0.079171-0.52472 0.091542l-0.02288-0.00172c-0.1528 0.00911-0.37717-0.023633-0.53202-0.045005-0.11546-0.015942-0.2283-0.041435-0.34298-0.061541-0.08589-0.01504-0.17268-0.024061-0.25814-0.041696-0.89864-0.17984-1.7376-0.59284-2.4373-1.1999-0.13504-0.11631-0.26144-0.23938-0.38577-0.36756-0.03511-0.036208-0.07521-0.068863-0.10542-0.10952-5.07e-4 -0.0025-8.11e-4 -0.00506-0.0013-0.00757-0.0055-0.029064-0.0062-0.046991 6.09e-4 -0.076039-0.21568-0.011585-0.43332-0.00627-0.64931-0.00581-0.09642 0-0.19898 0.00784-0.29442-0.00344-0.0223-0.00266-0.03554-0.00538-0.05231-0.021883l-0.0053-0.038152c0.01295-0.016853 0.03238-0.027292 0.04973-0.038814 0.16749-0.013393 0.33988-0.00302 0.50789-0.00182 0.08513 6.254e-4 0.19025 0.010933 0.27206-0.014284 0.0066-0.025577 0.01257-0.051332 0.0178-0.077243-0.02472 0.00354-0.05671 0.00365-0.08081-0.00375-0.1281-0.039335-0.44076-0.5623-0.51844-0.69676-0.65215-1.1447-0.92379-2.4766-0.77385-3.7942 0.01821-0.1704 0.05052-0.34078 0.081-0.5092 0.02947-0.16287 0.05769-0.32493 0.09792-0.4855 0.3341-1.3242 1.0796-2.5001 2.123-3.3489 0.11033-0.090839 0.21434-0.18663 0.33086-0.26966 0.10218-0.072829 0.20978-0.14239 0.31888-0.20376 0.05908-0.033228 0.12118-0.060822 0.17905-0.096243zm-1.7647 9.4122c-0.0052 0.025911-0.01116 0.051665-0.0178 0.077243-0.0818 0.025218-0.18692 0.014894-0.27206 0.014284-0.16799-0.0012-0.34038-0.011569-0.50789 0.00182-0.01735 0.011522-0.03678 0.021961-0.04973 0.038814l0.0053 0.038152c0.01676 0.016504 0.03 0.019235 0.05231 0.021882 0.09544 0.011262 0.198 0.00365 0.29442 0.00344 0.21597-5.211e-4 0.43361-0.00578 0.64931 0.00581-0.0068 0.029048-0.0061 0.046975-6.08e-4 0.076039 5.06e-4 0.0025 8.61e-4 0.00505 0.0013 0.00757 0.03022 0.040659 0.07031 0.073313 0.10542 0.10952 0.12433 0.12817 0.25073 0.25125 0.38577 0.36756 0.6997 0.60702 1.5387 1.02 2.4373 1.1999 0.08545 0.017635 0.17225 0.026656 0.25814 0.041696 0.11468 0.020105 0.22752 0.045599 0.34298 0.061541 0.15483 0.021372 0.3792 0.054115 0.53202 0.045005 0.13837-0.026218 0.29081-0.034426 0.41752-0.058987 0.04254-0.00843 0.06589-0.015598 0.09045-0.053281-0.0089-0.023962-0.10384-0.024321-0.12911-0.026802-0.21023-0.020668-0.77091-0.11465-0.92353-0.25297-0.01525-0.013821-0.0298-0.031732-0.02901-0.053943 5.57e-4 -0.015624 0.0086-0.029658 0.01877-0.040784 0.0899-0.098562 0.56188-0.18449 0.70517-0.19162 0.07635-0.064339 0.14999-0.11874 0.24072-0.16048 0.14123-0.065001 0.30329-0.086399 0.41827-0.20104 0.17519-0.17467 0.19645-0.47131 0.19276-0.70697-0.0013-0.082563-0.0095-0.16517-8e-3 -0.24772v-0.00845c-0.57196-0.7509-0.76868-1.867-0.85789-2.7942-0.01995-0.20752-0.10616-0.40903-0.31287-0.48081-0.13906-0.048288-0.35915-0.014399-0.50744-0.012648-0.51114 0.00606-1.0963-0.14305-1.4958-0.48197-0.2691-0.22829-0.42028-0.52827-0.45408-0.884 2e-3 -0.070212-5.57e-4 -0.13929 0.0066-0.20938 0.0238-0.26334 0.16125-0.53124 0.30324-0.74793 0.15708-0.23971 0.36583-0.45411 0.59117-0.62682 0.50025-0.38341 1.2332-0.68065 1.843-0.80359 0.0089-0.060806 0.01813-0.12007 0.03773-0.17834 0.03931-0.1169 0.11656-0.23564 0.2287-0.28913 0.06978-0.033811 0.14984-0.037339 0.22218-0.009792 0.15199 0.058466 0.22422 0.20645 0.28568 0.34898 0.14208-0.11979 0.3301-0.27196 0.52578-0.26039 0.09657 0.005706 0.17983 0.056517 0.24277 0.12992 0.14323 0.16706 0.17859 0.3813 0.1663 0.59613 0.1912 0.22482 0.48943 0.52989 0.74476 0.67492 0.07881-0.16426 0.16367-0.31685 0.27577-0.46002 0.47929-0.61572 1.273-0.87259 2.0089-0.65006 0.09288 0.028516 0.19602 0.064256 0.28135 0.11133 0.02558 0.014102 0.07768 0.047752 0.1146 0.068295 0.04821 0.032889 0.15893 0.11083 0.16988 0.11084-0.44389-0.91188-1.2554-1.7415-1.9461-2.2418-0.24678-0.17704-0.50009-0.31518-0.76893-0.4525-0.12568-0.064199-0.2517-0.12994-0.38107-0.1861-0.44904-0.19496-0.94421-0.3379-1.4275-0.40316-0.14455-0.019516-0.28971-0.027896-0.43505-0.03774-1.0912 0.32659-2.0168 0.52202-2.7514 0.66325l5.07e-4 -1.56e-5c-0.01915-0.021898-0.03634-0.0461-0.04793-0.072188-0.04189 0.00448-0.07264 0.04007-0.10834 0.059263l-0.0071 0.00443c-0.05787 0.035421-0.11997 0.063016-0.17905 0.096243-0.1091 0.061374-0.2167 0.13094-0.31888 0.20376-0.11652 0.083032-0.22052 0.17882-0.33085 0.26966-1.0435 0.84882-1.7889 2.0247-2.123 3.3489-0.04023 0.16058-0.06844 0.32263-0.09792 0.4855-0.03048 0.16842-0.06279 0.33881-0.081 0.5092-0.14994 1.3176 0.12172 2.6496 0.77385 3.7942 0.07767 0.13441 0.39033 0.65741 0.51844 0.69676 0.0241 0.00739 0.0561 0.00725 0.08081 0.00375zm2.8782-6.2333c-0.08352 0.042863-0.4567 0.28731-0.49664 0.35638-0.32695 0.28039-0.58772 0.67956-0.65377 1.1151 0.02145-0.00521 0.04332-0.00975 0.06436-0.016395 0.04668-0.14958 0.1144-0.27625 0.18903-0.41244 0.3575-0.57544 0.83295-0.91073 1.4046-1.2389 0.07297-0.041904 0.349-0.16662 0.3862-0.2035l-0.0065-0.007556c-0.11361 0.038762-0.41443 0.14338-0.50462 0.20658-0.12738 0.053348-0.26892 0.12075-0.38253 0.20079z" fill="#24272d" stroke-width=".013598"/>
   <g transform="matrix(.050688 0 0 .052113 -51.697 6.4981)" fill="#fdf9f0" stroke-width=".26458">
    <path d="m535.43-170.36c21.541-9.008 21.541-9.008 39.213-11.154 4.491-0.2759 13.662-1.6201 18.146-1.3244 2.8673 0.1889 5.7312 0.3497 8.5829 0.7242 9.535 1.2523 19.304 3.9952 28.163 7.7362 2.5522 1.0776 5.0385 2.3391 7.5179 3.571 5.3035 2.635 22.904 12.504 27.772 15.901 11.616 10.769 13.009 12.859 23.128 27.087 0.8816 1.3864 1.4595 2.6442 1.7386 4.1658l0.51289 2.276c-0.74056-1.07 0.9893 2.1514 0.4048 2.27-0.1704 0.3852-3.6128-2.8588-3.5136-2.4574-0.5643 0.061-1.5893-0.7099-2.0939-0.9805-1.6835-0.9033-3.7184-1.5891-5.5507-2.1363-14.518-4.2693-30.177 0.6591-39.633 12.474-2.2116 2.7472-3.8857 5.6753-5.4406 8.8273-5.0377-2.7829-10.921-8.6368-14.693-12.951 0.2426-4.1225-0.4551-8.2336-3.2808-11.439-1.2417-1.4086-2.8842-2.3836-4.7895-2.4931-3.8605-0.222-7.57 2.6979-10.373 4.9966-1.2126-2.735-2.6376-5.5747-5.6361-6.6966-1.4272-0.5286-3.0068-0.4609-4.3834 0.1879-2.2124 1.0263-3.7364 3.3049-4.5119 5.548-0.3866 1.1181-0.5697 2.2553-0.7443 3.4221-12.029 2.3591-26.49 8.0624-36.359 15.42-4.4458 3.3144-8.5641 7.4284-11.663 12.028-2.8012 4.1582-5.5129 9.2985-5.9825 14.352-0.1421 1.3449-0.091 2.6704-0.131 4.0177 0.6667 6.826 3.6494 12.582 8.9583 16.963 7.8814 6.5035 19.426 9.3647 29.51 9.2485 2.9258-0.034 7.2679-0.6839 10.011 0.2427 4.078 1.3774 5.7788 5.2443 6.1725 9.2263 1.7595 17.792 5.6401 39.209 16.925 53.618v0.1622c-0.03 1.5841 0.1328 3.1692 0.1582 4.7535 0.073 4.5218-0.3466 10.214-3.8029 13.566-2.2683 2.1998-5.4655 2.6104-8.2518 3.8577-1.7899 0.8011-3.2427 1.8449-4.749 3.0795-2.8268 0.1367-12.139 1.7856-13.912 3.6769-0.2003 0.2135-0.3593 0.4828-0.3704 0.7826-0.016 0.4262 0.2715 0.7699 0.5723 1.0351 3.0112 2.6543 14.073 4.4577 18.22 4.8543 0.4985 0.048 3.1403-0.089 3.3168 0.3701 0.7693 0.9477-0.9499 0.9996-1.7158 1.3789-1.4971 0.7413-2.2926 0.4767-4.2447 0.7236-0.7541 0.095-3.9045 0.4718-4.8305 0.196-3.0146 0.1748-7.4411-0.4535-10.496-0.8636-2.2778-0.3059-4.504-0.7951-6.7665-1.1809-1.6944-0.2886-3.4068-0.4617-5.0927-0.8001-44.755-6.1013-44.744-5.8387-70.269-28.302-21.335-25.176-16.579-40.639-19.522-74.325l3.4764-31.041c0.3538-3.1592 1.1381-6.235 1.9318-9.3163 6.5913-25.41 21.298-47.974 41.884-64.262 2.1767-1.7431 4.2286-3.5812 6.5273-5.1745 2.0158-1.3975 4.1386-2.7323 6.291-3.91 1.1655-0.6376 2.3907-1.1671 3.5324-1.8468z"/>
    <path d="m524.49-17.413c4.4331-0.3059 8.9916-0.096 13.436-0.079l20.974 0.015c-1.5195 3.1157-3.6102 6.0325-5.5065 8.9326-1.8714 2.9151-3.7163 5.8475-5.5345 8.7963-2.0902 3.443-4.3315 6.8556-6.5289 10.234-3.5973-5.8153-7.2475-11.598-10.95-17.346-1.6116-2.4884-3.1978-4.9618-4.7475-7.4883-0.4669-0.7612-1.0948-1.4729-1.4888-2.272-0.1341-0.2725-0.1815-0.4161-0.077-0.7085z"/>
    <path d="m504.59-48.07 20.548 0.03c4.895-0.01 9.8509-0.1783 14.738 0.078-1.0695 2.0613-2.5713 4.0126-3.8347 5.9732l-7.0178 10.965c-2.2852 3.6394-4.804 7.1562-6.9879 10.854-3.2811-5.4092-6.6373-10.772-10.068-16.088-2.4974-3.9071-5.0533-7.8007-7.3776-11.813z" fill-opacity=".98824"/>
    <path d="m560.87-16.174 16.504 28.041-17.788 0.039-16.384 0.075c1.2821-2.7223 3.2067-5.1619 4.8625-7.668 2.7765-4.2024 5.3271-8.5713 8.0094-12.835 1.5854-2.5202 3.5088-4.9721 4.7964-7.6517z"/>
    <path d="m557.95 0.2615c0.7242-0.2582 1.5312-0.1072 2.1127 0.3955 0.5816 0.5025 0.8483 1.279 0.698 2.0328s-0.6943 1.3687-1.4242 1.6098c-1.1105 0.3667-2.3091-0.2281-2.6887-1.3341-0.3797-1.1059 0.2008-2.3114 1.3022-2.704z"/>
    <path d="m550.48-180.87-0.022 0.3215c-0.01 0.038-0.014 0.076-0.024 0.1135-0.2029 0.7017-0.9996 1.3806-0.7048 2.1646 0.2463 0.2585 0.2358-0.4049 0.5816-0.3329 0.5818-0.1794-0.4126 0.5369 0.1666 0.7015 2.3434 1.4696-3.4084 1.9564-5.1302 2.118 0.571-1.1661 1.8994-2.9462 2.6762-3.9836 0.3738 0.017 0.7398-0.046 1.1094-0.094-0.1106 0.1884-0.06 0.1169-0.1969 0.2887-0.032 0.04-0.065 0.08-0.098 0.1198 0.5178-0.098 0.87-1.0644 1.6423-1.4166z" fill-opacity=".75686"/>
    <path d="m549.46-181.84c0.6837-1.1873 1.4026-2.3539 2.1559-3.4984 0.2648 0.3609-8e-4 0.8342 0.3109 1.0746 0.2891 0.2231 0.4487-0.054 0.7167 0.355-0.2209 0.513-0.4283 1.0335-0.6654 1.539-0.2297 0.4895-0.1641 1.0171-0.1381 1.5435-0.4633 0.4188-0.6284 1.0184-1.0795 1.456 0.1153-0.3966 0.2357-0.7721 0.2577-1.188l-0.1392-0.1315-0.4164 0.1434 0.022-0.3215c0.1389-0.3056 0.2532-0.6194 0.3702-0.9338-0.2249 0.1863-0.4768 0.322-0.729 0.4668-0.3852-0.072-0.4212-0.2104-0.6657-0.5051z" fill-opacity=".6"/>
    <path d="m553.23-187.88c0.394 0.6551 0.7785 1.3065 1.2444 1.9143-1.0798 0.6907-1.8762 3.306-2.2874 4.5343-0.089 0.2656-0.1759 0.396-0.3542 0.6058-0.026-0.5265-0.092-1.054 0.1381-1.5435 0.2371-0.5055 0.4445-1.026 0.6654-1.5391-0.268-0.4094-0.4276-0.1319-0.7167-0.3549-0.3117-0.2405-0.046-0.7137-0.3108-1.0746 0.3031-0.8692 1.0886-1.7822 1.6212-2.5423z" fill-opacity=".55686"/>
    <path d="m550.46-180.55 0.4164-0.1434 0.1392 0.1315c-0.022 0.4159-0.1424 0.7914-0.2577 1.188-0.2032 0.2159-0.4202 0.4133-0.5641 0.6739l0.1188 0.095c0.6157-0.3299 1.2356-0.6614 1.9248-0.8051 0.322 0.098 0.5554 0.1868 0.7252 0.5046 0.1555 1.1876-2.006 0.8551-2.4833 1.0022-0.3458-0.072-0.5022-0.1103-0.7485-0.3688-0.2948-0.784 0.5019-1.4629 0.7048-2.1646 0.011-0.037 0.016-0.076 0.024-0.1135z" fill-opacity=".69804"/>
    <path d="m554.53-185.78c0.6282 0.8408 1.2058 1.7089 1.781 2.5863-0.3533 0.1663-0.5377 0.3441-0.934 0.1784-0.6173-0.2579-1.0896-1.0605-1.2007-1.6901-0.071-0.4048 0.1609-0.7383 0.3537-1.0746z" fill-opacity=".27843"/>
    <path d="m549.46-181.84c0.2445 0.2947 0.2805 0.4327 0.6657 0.5051 0.2522-0.1448 0.5041-0.2805 0.729-0.4668-0.117 0.3144-0.2313 0.6282-0.3702 0.9338-0.7723 0.3522-1.1245 1.3185-1.6423 1.4166 0.033-0.04 0.066-0.08 0.098-0.1198 0.1374-0.1718 0.086-0.1003 0.1969-0.2887-0.3696 0.049-0.7356 0.1114-1.1094 0.094 0.4556-0.7065 0.9472-1.3886 1.4324-2.0747z" fill-opacity=".61569"/>
   </g>
   <g stroke-width=".013598">
    <path d="m-20.042 8.3362c0.07828 0.036359 0.3173 5.211e-4 0.41565 0.013523-0.04746 0.038387-0.09357 0.083189-0.12665 0.1355-0.03017 0.047668-0.05402 0.11522-0.04025 0.17263 0.01105 0.046037 0.05189 0.080041 0.09042 0.10177 0.27909 0.15743 1.5635 0.047814 1.9451-0.00521 0.22788-0.031659 0.45859-0.075424 0.68013-0.13939 0.16151-0.046756 0.3196-0.10516 0.47312-0.17478 0.04931-0.022596 0.15138-0.094492 0.19127-0.10389 0.0017-5.211e-4 0.0035-5.211e-4 0.0053-7.296e-4 0.21745 0.017943 1.0447 0.12939 1.1665 0.28062 0.01564 0.019418 0.02639 0.04327 0.02239 0.069108-0.0054 0.03465-0.03354 0.059389-0.06151 0.075945-0.13167 0.077962-0.44568 0.12782-0.60521 0.15627-0.27851 0.04968-0.55742 0.078962-0.83868 0.10534-0.09157 0.00859-0.18258 0.022737-0.27419 0.030664-0.14874 0.012867-0.29834 0.01961-0.44736 0.028793-1.2994 0.073944-2.6021 0.059456-3.8996-0.043379-0.41104-0.029621-1.0039-0.068295-1.3044-0.28832-0.01525-0.01382-0.0298-0.031732-0.02901-0.053943 5.58e-4 -0.015624 0.0086-0.029658 0.01878-0.040784 0.08989-0.098562 0.56188-0.18449 0.70517-0.19162-0.03346 0.039872-0.07187 0.096238-0.07321 0.15032-6.09e-4 0.025895 0.01002 0.053567 0.02782 0.071906 0.10447 0.10765 0.52036 0.12199 0.67222 0.1236 0.48925 0.00521 0.9286-0.11356 1.286-0.47396z" fill="#e3d7c6"/>
    <path d="m-19.866 8.0976c0.14835 0.042347 0.28829 0.10269 0.43979 0.13497-0.06875 0.036047-0.13725 0.071041-0.20027 0.11715-0.09835-0.013195-0.33737 0.022836-0.41565-0.013523 0.06599-0.075273 0.12222-0.15388 0.17613-0.2386z" fill="#fdf9f0"/>
    <path d="m-20.803 7.2803c0.01392-0.00156 0.02906-0.00313 0.04248 0.00193 0.04907 0.018542 0.10098 0.057648 0.14662 0.084549 0.12487 0.0736 0.25727 0.14887 0.39543 0.19168 0.33604 0.10412 0.69604 0.12314 1.0429 0.075851 0.0318 0.13333 0.07999 0.26005 0.14967 0.3775 0.02766 0.046615 0.06145 0.089625 0.08647 0.13775 9.12e-4 0.00177 0.0018 0.00354 0.0027 0.00532-0.03738 0.0024-0.07506 0.00511-0.11251 0.00339-0.12102-0.00547-0.24376-0.035104-0.36096-0.065658-0.51438-0.13415-1.0293-0.40907-1.3928-0.81234z" fill="#d6ac7f"/>
    <path d="m-21.395 0.18716c-0.01396 0.018756-0.02776 0.037178-0.04278 0.055047-0.01821 0.021674-0.02484 0.048961-0.02182 0.077352 0.0021 0.01948 0.0087 0.031961 0.02231 0.045677 0.01788 0.006743 0.0283 0.009214 0.04684 0 0.06268-0.030903 0.13174-0.15311 0.17821-0.20914 0.11371-0.13713 0.36482-0.36761 0.55792-0.30682 0.08412 0.026484 0.14173 0.10291 0.17946 0.18092 0.05813 0.1202 0.09498 0.2938 0.04967 0.42367-0.02114 0.060629-0.06067 0.1112-0.10842 0.15207-0.04021 0.034416-0.19983 0.10603-0.16925 0.17118 0.0092 0.019662 0.02843 0.032222 0.04857 0.037079 0.04269 0.010282 0.08869-0.029538 0.12203-0.052687 0.07498-0.052108 0.13242-0.11994 0.19112-0.18969 0.2002 0.2012 0.48925 0.51841 0.7257 0.66184 0.0075 0.00633 0.02131 0.013226 0.02191 0.02379 2e-3 0.033697-0.04075 0.15068-0.05032 0.19314-0.01476 0.064516-0.02604 0.12982-0.03379 0.1956-0.06829 0.57736 0.12046 1.1556 0.51372 1.5737 0.01801 0.019277 0.03669 0.037892 0.05599 0.055803-0.02123 0.023936-0.04382 0.047293-0.0618 0.073933-0.11511 0.16723-0.22626 0.35101-0.3614 0.50107-0.06157-0.029673-0.11507-0.052687-0.18307-0.026077-0.03158 0.012356-0.06079 0.043807-0.08287 0.069399-0.06563 0.076096-0.12227 0.16591-0.18093 0.24801-0.06048 0.084664-0.12723 0.16852-0.1827 0.25653-0.0433-0.00219-0.09337 0.00534-0.12766 0.035229-0.02622 0.022862-0.04322 0.061348-0.04488 0.096274-8.62e-4 0.017838 0 0.035792 0.0015 0.053567-0.04637 0.010902-0.11664 0.029366-0.14468 0.072042-0.02737 0.04167-3e-3 0.083267-0.01998 0.1231-0.034 0.079848-0.15377 0.054823-0.12153 0.17806 0.0028 0.010688 0.0065 0.020877 0.01051 0.031148-0.08315 0.10916-0.28205 0.33794-0.32739 0.44155-0.01458 0.033327-0.02119 0.068842-0.01774 0.10533 0.0096 0.10227 0.09177 0.18405 0.16642 0.24411 0.09137 0.073532 0.21686 0.1477 0.33724 0.13068 0.09585-0.013539 0.15824-0.091636 0.21159-0.16754 0.03359-0.047778 0.06589-0.096921 0.09746-0.14612 0.3965 0.37888 0.73163 0.54276 1.2782 0.53541-0.28012 0.33928-0.39215 0.77456-0.35852 1.2142 0.0073 0.095868 0.02094 0.19576 0.04552 0.28874 0.0318 0.13333 0.07999 0.26005 0.14967 0.3775 0.02766 0.046615 0.06145 0.089625 0.08647 0.13775 9.12e-4 0.00177 0.0018 0.00354 0.0027 0.00532-0.03738 0.0024-0.07506 0.00511-0.11251 0.00339-0.12102-0.00547-0.24376-0.035104-0.36096-0.065658-0.51438-0.13415-1.0293-0.40907-1.3928-0.81234-0.45018-0.47885-0.67668-1.0655-0.82662-1.7036-0.05786-0.23607-0.10416-0.47497-0.13872-0.71583-0.01922-0.13151-0.03515-0.26351-0.04777-0.39586-0.01153-0.11254-0.01672-0.22946-0.04806-0.33835-0.02091-0.060712-0.04589-0.11987-0.08123-0.17331-0.22441-0.33929-0.56983-0.23162-0.90528-0.24324-0.20494-0.0071-0.40014-0.033889-0.60131-0.073407 0.07498-0.02343 0.13276-0.049487 0.19509-0.098849 0.04886-0.056767 0.09062-0.12352 0.0933-0.2016 0.0023-0.067992-0.03319-0.15854-0.07965-0.20851-0.01092-0.011752-0.02128-0.019553-0.03777-0.019084-0.01586 5.211e-4 -0.01705-7.296e-4 -0.02827 0.011611 0.0025 0.041639 0.04065 0.082772 0.0589 0.12019 0.02139 0.043864 0.02631 0.091485 0.0098 0.13797-0.02348 0.065986-0.08261 0.11184-0.14225 0.14113l-0.0085 0.00412c-0.02409 0.00922-0.04855 0.016009-0.07361 0.021705-0.21802 0.049497-0.40932-0.053526-0.59006-0.17124-0.13151-0.07731-0.26209-0.18611-0.3426-0.32-0.12608-0.20968 0.0049-0.45219 0.13301-0.62474 0.03843-0.051733 0.09973-0.10937 0.11431-0.17329-0.0039-0.010412-0.0033-0.015087-0.01333-0.021122-0.06846-0.041191-0.28958 0.00135-0.36639 0.019245 0.04668-0.14958 0.1144-0.27625 0.18903-0.41244 0.3575-0.57544 0.83295-0.91073 1.4046-1.2389 0.07297-0.041904 0.349-0.16662 0.3862-0.2035l-0.0065-0.007556c0.27697-0.11302 0.86889-0.26873 1.161-0.20476z" fill="#e2b98c"/>
   </g>
   <g stroke-width=".26458">
    <g transform="matrix(.050688 0 0 .052113 -51.697 6.4981)" fill="#d6ac7f">
     <path d="m561.09-56.805c3.3928 0.2894 6.8355 0.5548 10.242 0.4423 3.424-0.1129 7.7991-1.1498 11.07-0.5146 1.7492 0.3398 3.375 1.3396 4.5156 2.7054 1.7836 2.1357 2.3284 4.8001 2.0691 7.5195-0.044 0.4664-0.1479 0.7667-0.4204 1.1459-0.4125-1.165-0.9054-2.3001-1.6026-3.3256-4.4273-6.5106-11.242-4.4445-17.86-4.6675-4.0431-0.1363-7.8943-0.6503-11.863-1.4086 1.4793-0.4496 2.6191-0.9496 3.8489-1.8968z"/>
     <path d="m632.91-101.02c0.1479 0.1215 0.4204 0.2538 0.4323 0.4565 0.039 0.6466-0.804 2.8913-0.9927 3.7062-0.2913 1.238-0.5138 2.4911-0.6667 3.7534-1.3473 11.079 2.3765 22.174 10.135 30.197 0.3553 0.3699 0.7239 0.7271 1.1046 1.0708-0.4188 0.4593-0.8644 0.9075-1.2192 1.4187-0.1328-0.113-0.2651-0.2265-0.3969-0.341-6.8736-5.9733-11.149-15.048-11.748-24.109-0.1188-1.6227-0.098-3.2531 0.062-4.8723 0.2582-2.485 1.6706-9.4295 3.2906-11.28z"/>
     <path d="m545.34-59.947c2.5337-0.031 5.9931 1.4957 8.5829 2.0566 1.4705 0.3186 3.0858 0.3805 4.5103 0.8128-0.4752 0.177-0.9578 0.3072-1.4523 0.4165-4.3013 0.9498-8.0753-1.0271-11.641-3.2859z"/>
    </g>
    <g transform="matrix(.050688 0 0 .052113 -51.697 6.4981)">
     <path d="m582.1-109.5c3.5568-0.6432 7.1845 0.6787 9.4938 3.4594 2.309 2.7808 2.9419 6.5895 1.656 9.9674-1.2856 3.3782-4.291 5.8021-7.8647 6.3437-5.4174 0.821-10.49-2.8607-11.388-8.2659s2.7111-10.53 8.1028-11.505z" fill="#fdf9f0"/>
     <path d="m580.25-106.35c0.7263-0.031 1.5444 0.1128 2.2122 0.4009 1.1692 0.5043 2.0161 1.484 2.4336 2.6773 0.4479 1.2801 0.4022 2.7612-0.2056 3.9817-0.6458 1.2978-1.6356 1.9108-2.9496 2.3678-1.0197 0.09-1.8401 0.044-2.7492-0.4855-1.0917-0.6364-1.8418-1.7725-2.1262-2.9914-0.3204-1.374-0.071-2.9125 0.6776-4.1093 0.6667-1.0668 1.5078-1.5636 2.7072-1.8415z" fill="#24272d"/>
     <path d="m580.29-104.73c0.522-0.086 1.0752-0.2432 1.5443 0.09 0.2069 0.1469 0.2763 0.3117 0.3744 0.5342 0.017 0.3344-0.01 0.5715-0.2318 0.8406-0.4069 0.4863-0.935 0.5072-1.5144 0.5085-0.07 0.098-0.1376 0.1977-0.2133 0.2911-0.2807 0.346-0.5225 0.4849-0.975 0.5371-0.3916-0.1299-0.4148-0.1418-0.6564-0.4755-0.065-0.3791-0.075-0.6808 0.084-1.0419 0.2762-0.6308 0.988-1.0218 1.5886-1.2843z" fill="#95b7b5"/>
     <path d="m580.29-104.73c0.522-0.086 1.0752-0.2432 1.5443 0.09 0.2069 0.1469 0.2763 0.3117 0.3744 0.5342 0.017 0.3344-0.01 0.5715-0.2318 0.8406-0.4069 0.4863-0.935 0.5072-1.5144 0.5085-0.3667-0.7972-0.4236-1.1215-0.1725-1.9735z" fill="#fdf9f0"/>
     <path d="m609.23-123.43c1.2811-0.1707 2.5937 0.048 3.6343 0.8585 1.0279 0.8004 1.5761 2.0328 1.7092 3.3084 0.1606 1.5364-0.2831 2.9914-1.3047 4.1553-1.6854 1.9198-4.1521 2.4394-6.5831 2.5492-1.4446-0.022-3.1535-0.1468-4.4508-0.8395-0.4355-0.2326-0.8014-0.5723-0.9054-1.0766-0.1736-0.8398 0.3469-1.778 0.7337-2.4918 1.57-2.8991 3.9267-5.5068 7.1668-6.4635z" fill="#24272d"/>
     <path d="m609.8-121.98c0.7538-0.048 1.465 0.1606 2.0614 0.6242 0.7284 0.5665 1.1732 1.3862 1.284 2.3006 0.122 0.9313-0.1394 1.8721-0.7241 2.6072-1.4542 1.8478-3.9577 2.1322-6.1185 2.4182-1.2274-0.1497-2.4046-0.3061-3.5828-0.6971 0.2485-0.6864 0.5882-1.3613 0.9518-1.9931 1.4425-2.507 3.2646-4.4958 6.1282-5.26z" fill="#e2b98c"/>
     <path d="m586.02-114.01c0.5143-0.067 1.7084-0.2067 2.1415 0.067 0.3228 0.2037 0.4302 0.4283 0.5421 0.7773-0.078 0.3672-0.118 0.5038-0.5088 0.6408-0.7805 0.2736-1.674 0.2792-2.4902 0.376-2.2019 0.2606-4.0947 1.0538-5.9346 2.2773-0.05 0.035-0.1 0.071-0.1508 0.1055-0.4903 0.3345-0.9832 0.7366-1.6137 0.5797-0.2215-0.055-0.2067-0.118-0.3167-0.2939 0.013-0.4702 0.1542-0.7607 0.4495-1.1187 1.705-2.0666 5.3266-3.1078 7.8817-3.4107z" fill="#24272d"/>
     <path d="m693.9-61.674c0.3035 0.3789 0.5877 0.7758 0.879 1.1639 10.082 14.766 17.123 31.664 18.931 49.534 0.6326 6.2532 0.6549 12.495-0.5196 18.692-1.8373 9.6954-7.4393 17.807-15.539 23.334-11.923 8.1365-27.283 9.8878-41.326 10.653-3.982 0.2169-8.0368 0.5125-12.021 0.3601 1.0969-0.4903 1.8992-0.6366 2.4357-1.7775-0.1029-0.245-0.1992-0.4916-0.3765-0.6956-0.2997-0.3453-0.7805-0.5313-1.2279-0.5699-0.7961-0.068-1.5399 0.3503-2.1045 0.8771-0.6876 0.6416-0.7969 1.171-0.8445 2.0881-1.4841-0.04-3.3946 0.089-4.8147-0.2966-0.5627-1.4682 1.981-1.6111 2.2889-2.7038 0.098-0.3482 8e-4 -0.7085-0.1881-1.0073-0.1706-0.2698-0.445-0.386-0.7546-0.4257-0.7807-0.1-1.8002 0.466-2.3929 0.9184-1.126 0.8602-1.5229 1.8304-1.7179 3.1798-0.7842-0.1741-1.8523-0.2514-2.3368-0.9621-0.073-0.3431-0.062-0.5154 0.091-0.8371 0.5686-1.1912 2.1286-2.2508 3.2414-2.8903 3.4835-2.0016 8.3553-2.7244 12.332-2.286 2.068 0.2281 8.976 2.3744 10.39 1.7195 0.3749-0.1738 0.6231-0.5897 0.7069-0.9731-0.2685-1.9368-6.2491-2.2133-7.9017-3.0568-1.21-0.6172-2.2109-1.6917-3.0078-2.7715-4.2003-5.6914-5.4658-14.337-4.4204-21.212 1.0496-6.9014 4.4852-13.376 10.314-17.38 1.4219-0.9769 3.5116-1.5341 4.5903-2.399 0.286-0.2294 0.4439-0.5625 0.4574-0.9295 0.013-0.3379-0.1108-0.7199-0.3524-0.9615-0.2199-0.2193-0.536-0.3106-0.839-0.3244-1.9256-0.088-5.0599 2.1231-6.4566 3.3483-4.1926 0.9568-9.2774 0.6676-13.363-0.5307-5.5335-1.6227-10.655-5.2258-14.532-9.4657-1.2928-1.4137-2.4406-2.9584-3.6865-4.4125-0.8215-0.9586-2.8286-2.7538-3.2824-3.8071-0.2199-0.5106-0.1397-1.2909 0.067-1.8007 0.7196-0.4617 1.5676-0.1318 2.3664-0.018 0.426 0.061 0.6549 0.06 1.0001-0.1997 0.1212-0.7604-1.3343-2.7009-1.7153-3.5428 0.2813-0.02 0.5623-0.032 0.8433-0.049 1.1041-0.065 2.6741 0.6842 3.6451 0.2376 0.508-0.8525-1.1509-2.5696-1.3946-3.5377l0.126-0.1802c0.4389-0.1654 0.7699-0.084 1.1993 0.069 0.7583 0.2704 1.4163 0.7218 2.1233 1.0959 1.8082 0.9567 3.7518 1.8584 5.7433 2.3516 6.39 1.5828 14.105-0.1468 19.664-3.5139 0.5893-0.3567 1.5873-0.9565 1.6579-1.7145 0.028-0.3008-0.1056-0.6062-0.3368-0.7998-0.5448-0.457-1.3269-0.4533-1.9772-0.2654-0.8721 0.2516-1.7341 1.0022-2.5681 1.4152-2.735 1.3542-5.8235 2.3464-8.8577 2.6993 1.0337-1.7531 4.413-5.3438 4.4146-7.1652 0-1.217-0.7123-1.9354-1.505-2.7479 1.8839-3.3534 4.8763-6.7284 7.2541-9.7986l0.9671-1.2959c5.6075 3.1131 10.678 4.9273 17.166 5.2631 10.085 0.582 19.98-2.9113 27.464-9.6957z" fill="#e2b98c"/>
     <path d="m687.87-55.265c2.6313-1.4417 4.5543-3.447 6.8993-5.2456 10.082 14.766 17.123 31.664 18.931 49.534 0.6326 6.2532 0.6549 12.495-0.5196 18.692-1.8373 9.6954-7.4393 17.807-15.539 23.334-11.923 8.1365-27.283 9.8878-41.326 10.653-3.982 0.2169-8.0368 0.5125-12.021 0.3601 1.0969-0.4903 1.8992-0.6366 2.4357-1.7775l0.093 0.037c4.1833-0.6281 9.2829-1.2568 13.252-2.6096 2.9609-1.0094 5.9851-2.7342 8.6248-4.4106 12.213-7.7549 19.967-24.111 23.006-37.824 3.2239-14.548 2.7477-28.052-1.0372-42.411-0.5945-2.2563-1.5981-6.4495-2.7998-8.3328z" fill="url(#meshgradient41470)"/>
     <path d="m693.9-61.674c0.3035 0.3789 0.5877 0.7758 0.879 1.1639-2.345 1.7986-4.268 3.8039-6.8993 5.2456-1.5719 0.7938-3.0932 1.7026-4.7006 2.4234-3.674 1.6472-7.7697 2.3553-11.765 2.6508-7.1432 0.5289-17.579-0.9961-23.112-5.7552l0.9671-1.2959c5.6075 3.1131 10.678 4.9273 17.166 5.2631 10.085 0.582 19.98-2.9113 27.464-9.6957z" fill="#c69b6d"/>
     <path d="m666.1-123.56c19.043-1.4597 35.664 12.795 37.123 31.838 1.4594 19.043-12.795 35.664-31.838 37.123-19.043 1.4595-35.664-12.795-37.123-31.838-1.4594-19.043 12.795-35.664 31.838-37.123z" fill="#959291"/>
     <path d="m667.22-121.17c17.706-0.8205 32.725 12.868 33.546 30.575 0.8207 17.706-12.868 32.726-30.574 33.547-17.707 0.8212-32.727-12.868-33.547-30.574-0.8208-17.707 12.868-32.726 30.575-33.547z" fill="#24272d"/>
     <path d="m640.42-97.414c3.3245-11.366 13.128-19.639 24.891-21.005 11.763-1.3663 23.202 4.4397 29.042 14.741 5.841 10.301 4.9499 23.098-2.2621 32.491-0.5541 0.7215-1.1412 1.4169-1.7595 2.0841-8.8781 9.5801-23.002 12.175-34.706 6.3768-11.704-5.7984-18.196-18.607-15.953-31.475 0.1892-1.0843 0.4387-2.1569 0.7475-3.2131z" fill="#bfdde9"/>
     <path d="m639.67-94.201c3.151 0.9615 7.4031 3.4681 10.451 4.9792l22.904 11.5c3.779 1.9264 7.5525 3.8782 11.36 5.7467 1.9243 0.9443 4.1267 1.7725 5.9439 2.8723-8.8781 9.5801-23.002 12.175-34.706 6.3768-11.704-5.7984-18.196-18.607-15.953-31.475z" fill="#e3d7c6"/>
     <path d="m640.42-97.414c1.948 1.2878 4.1456 2.264 6.2407 3.2922l9.4424 4.6117c3.6294 1.7843 7.1806 3.7124 10.786 5.5419l15.228 7.6518 5.7022 3.0318c1.4776 0.9201 2.9825 1.8904 4.0571 2.634-1.7595 2.0841-0.9267 0.8804-1.545 1.5475-1.8172-1.0997-4.0196-1.9279-5.944-2.8723-3.8076-1.8685-7.581-3.8203-11.36-5.7467l-22.904-11.5c-3.0476-1.5111-7.2997-4.0178-10.451-4.9792 0.1893-1.0844 0.4388-2.1569 0.7477-3.2132z" fill="#95b7b5"/>
     <path d="m677.45-110.86c2.091-0.1526 3.6595 0.1365 5.5042 1.124 4.3256 2.3156 7.6821 7.0403 9.0389 11.705 0.7588 2.6082 1.1123 5.946-0.3093 8.3955-0.8805 1.5174-2.1592 2.2399-3.8036 2.6675-1.7087 0.3339-3.3243-0.059-4.8501-0.8377-4.4678-2.2788-7.7743-6.8056-9.2853-11.508-0.8803-2.7395-1.289-5.9616 0.1249-8.6032 0.8025-1.4989 1.986-2.4278 3.5803-2.9435z" fill="#fdf9f0"/>
     <path d="m686.63-85.122c1.5354-0.473 3.1663 0.3744 3.6611 1.9029 0.495 1.5285-0.3294 3.171-1.8508 3.6878-1.0033 0.3408-2.1127 0.1148-2.903-0.5914-0.7901-0.7061-1.139-1.7833-0.9126-2.8186 0.2263-1.0353 0.9925-1.8687 2.0053-2.1807z" fill="#fdf9f0"/>
     <path d="m606.22 15.535c2.4638 2.8545 5.2594 5.2728 8.2251 7.584 3.5187 2.4077 6.9646 4.668 10.854 6.4383-3.937 6.022-9.8716 9.6803-16.887 11.128-4.6125 0.952-9.6271 1.1343-14.308 0.6538 0.3451-0.4239 0.6819-0.8361 1.0811-1.2121 0.8552-0.232 1.7016-0.404 2.5752-0.5521 0.1339-0.4279 0.1953-0.8536 0.063-1.2915-0.1243-0.4122-0.3678-0.7596-0.7623-0.9496-0.5582-0.2688-1.3509-0.01-1.8859 0.1887-1.4764 0.5437-2.9535 1.4877-3.6306 2.9623-0.097 0.2122-0.1244 0.2923-0.2871 0.4683-0.8961 0.1132-2.0111-0.3403-2.8646-0.6088 3.6332-4.9806 9.503-3.115 13.71-7.9976 3.9764-4.6151 4.5394-10.976 4.1161-16.812z" fill="#e2b98c"/>
     <path d="m614.45 23.119c3.5187 2.4077 6.9646 4.668 10.854 6.4383-3.937 6.022-9.8716 9.6803-16.887 11.128-4.6125 0.952-9.6271 1.1343-14.308 0.6538 0.3451-0.4239 0.6819-0.8361 1.0811-1.2121 0.8552-0.232 1.7016-0.404 2.5752-0.5521 0.054 0.012 0.1064 0.032 0.1614 0.036 2.1738 0.154 9.2205-2.8983 11.078-4.19 2.8136-1.9566 4.2979-5.2721 4.9207-8.5629 0.2339-1.237 0.3059-2.4985 0.5239-3.7391z" fill="#d6ac7f"/>
     <path d="m625.05-39.659c0.5834-0.9075 6.3304-8.8389 6.4849-8.9601 0.068-0.053 0.3019-0.1048 0.3639-0.114 0.8519-0.1276 2.0261 0.8167 2.6968 1.2565 1.1266 0.803 4.7567 3.0281 4.984 4.2471-0.3913 1.1419-4.1291 5.9846-5.1414 7.0151-2.404-0.089-4.3958-0.6188-6.5474-1.693-1.0144-0.4956-1.9483-1.061-2.8408-1.7516z" fill="#500"/>
     <path d="m625.05-39.659c0.5834-0.9075 6.3304-8.8389 6.4849-8.9601 0.068-0.053 0.3019-0.1048 0.3639-0.114 0.8519-0.1276 2.0261 0.8167 2.6968 1.2565-1.6827 3.3025-4.664 6.436-6.7048 9.5692-1.0144-0.4956-1.9483-1.061-2.8408-1.7516z" fill="#2b0000" filter="url(#filter49399)" opacity=".52029"/>
     <path d="m608.98-18.869c0.7479-1.3486 1.8888-2.5635 2.8593-3.7557 0.9972-1.2256 1.9571-2.4808 2.9549-3.7055 0.594 0.5955 1.1448 1.2332 1.7042 1.8613 1.4721 1.5505 2.754 3.3293 4.0431 5.0319-0.9488 1.5237-2.6125 5.0461-4.381 5.4744-1.1618 0.2816-2.3799-0.4116-3.3174-1.0345-0.7678-0.5101-1.479-1.1123-2.1886-1.6991-0.698-0.6554-1.2028-1.3483-1.6745-2.1728z" fill="#500"/>
     <path d="m608.98-18.869c0.7479-1.3486 1.8888-2.5635 2.8593-3.7557 0.9972-1.2256 1.9571-2.4808 2.9549-3.7055 0.594 0.5955 1.1448 1.2332 1.7042 1.8613-1.5748 2.2209-3.9307 6.0349-5.8439 7.7727-0.698-0.6554-1.2028-1.3483-1.6745-2.1728z" fill="#2b0000" filter="url(#filter49403)" opacity=".52029"/>
     <path d="m593.17-129.76c0.8014-0.042 1.5147 0.043 2.2315 0.4294 2.0563 1.1091 3.058 3.7158 3.7062 5.8205-1.4758-0.3212-2.9596-0.4548-4.4675-0.4937-2.0526 0.02-4.0986 0.3564-6.1314 0.6176 0.3037-1.3322 0.7607-2.7057 1.4642-3.8828 0.7758-1.2983 1.7277-2.1114 3.197-2.491z" fill="#e2b98c"/>
     <path d="m645.12-59.851c0.5727 0.3624 1.1338 0.8863 1.6703 1.3084-1.5815 1.9886-3.1258 4.0062-4.6332 6.0517-1.1496 1.5823-2.2253 3.2454-3.4546 4.7652-0.6178-0.4699-1.2062-0.9892-1.8021-1.4877 1.4553-2.0659 3.0174-4.063 4.5561-6.0672 1.1872-1.5465 2.3377-3.1382 3.6635-4.5704z" fill="#959291"/>
     <path d="m547.6-102.52c-0.029 0.139-0.024 0.2898-0.087 0.4168-0.3469 0.6934-2.359 2.4286-2.9808 3.0562-0.8495 0.858-5.1751 5.5927-5.1746 6.5148 0 0.1117 0.086 0.2061 0.1289 0.309 0.047-0.027 0.092-0.057 0.1401-0.081 0.2109-0.105 0.3373-0.099 0.5657-0.093 0.3161 0.1942 0.3552 0.1964 0.4886 0.5374-0.2122 0.8422-1.4869 1.5097-0.9802 2.508-1.4724 2.6133-2.8083 5.044-3.7293 7.9142-0.4152 0.1275-0.8467 0.215-1.2698 0.3146 1.303-8.3566 6.4482-16.017 12.898-21.397z" fill="#fdf9f0" fill-opacity=".97255"/>
     <path d="m574.9-117.17 0.1291 0.145c-0.7339 0.7078-6.1796 3.1009-7.6192 3.905-11.276 6.2971-20.656 12.732-27.71 23.774-0.5067-0.9983 0.768-1.6658 0.9802-2.508-0.1333-0.341-0.1725-0.3432-0.4886-0.5374-0.2284-0.01-0.3548-0.012-0.5657 0.093-0.048 0.024-0.093 0.054-0.1402 0.081-0.043-0.1029-0.1289-0.1973-0.1289-0.309-5e-4 -0.9221 4.3251-5.6568 5.1747-6.5148 0.6218-0.6276 2.6339-2.3628 2.9808-3.0562 0.064-0.127 0.058-0.2778 0.087-0.4168 0.7879-1.3255 8.1502-6.0161 9.798-6.8386 0.5617 0.033 0.8586-0.4324 1.3745-0.4125 0.2704 0.1537 0.5485 0.349 0.8647 0.3757 0.3831 0.032 1.6552-0.9782 1.987-1.2266l-0.039-0.1881-0.5098-0.1506-0.051-0.1241c1.1287-0.8355 3.0557-1.0702 3.9203-2.1267 1.7793-1.2126 7.7142-3.2202 9.9555-3.964z" fill="url(#gradient_0)"/>
    </g>
    <g transform="matrix(.050688 0 0 .052113 -51.697 6.4981)" fill="#fdf9f0">
     <path d="m557.4-109.36c2.2413-1.5359 5.0337-2.8292 7.5467-3.8529-0.8646 1.0565-2.7916 1.2912-3.9203 2.1267l0.051 0.1241 0.5098 0.1506 0.039 0.1881c-0.3318 0.2484-1.6039 1.2589-1.987 1.2266-0.3162-0.027-0.5943-0.222-0.8647-0.3757-0.5159-0.02-0.8128 0.4455-1.3745 0.4125z" fill-opacity=".96471"/>
     <path d="m584.25 50.781c2.9332-0.2374 7.8544-0.2157 10.352-1.7566 0.2-0.3834-0.064-0.2881 0-0.5747 1.0454-0.035 3.2552-0.053 4.1836 0.308l-0.172 0.1198c0.3427 0.1009 0.3943 0.074 0.5824 0.3702-0.049 0.4696-0.5919 0.6191-0.6406 1.0864-0.579 5.5539-12.887 0.4469-14.302 0.4469z" fill-opacity=".44706"/>
     <path d="m484 13.524c-0.2446-0.099-0.1851-0.094-0.3827-0.1268-0.1465-0.024-0.2965-0.036-0.4404-0.074-0.2608-0.069-0.443-0.1227-0.5904-0.3569 0.4166-0.2344 0.8475-0.1807 1.3096-0.1743z" fill-opacity=".88235"/>
    </g>
   </g>
  </g>
 </g>
 <script id="mesh_polyfill" type="text/javascript">!function(){const t="http://www.w3.org/2000/svg",e="http://www.w3.org/1999/xlink",s="http://www.w3.org/1999/xhtml",r=2;if(document.createElementNS(t,"meshgradient").x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case"translate":2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error("mesh.js: translate does not have 2 arguments!"),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case"scale":1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error("mesh.js: scale does not have 1 or 2 arguments!"),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case"rotate":if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error("math.js: No argument to rotate transform!");3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case"skewX":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error("math.js: No argument to skewX transform!");break;case"skewY":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error("math.js: No argument to skewY transform!");break;case"matrix":6===l.length?h=h.append(new g(...l)):console.error("math.js: Incorrect number of arguments for matrix!");break;default:console.error("mesh.js: Unhandled transform type: "+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error("mesh.js: argument to Affine.append is not affine!");let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute("type")||"bilinear"}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute("x")),n=Number(t.getAttribute("y"));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute("path"),c="l";null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case"l":0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"L":0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"c":0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case"C":0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error("mesh.js: "+c+" invalid path type.")}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if("bilinear"===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll("rect,circle,ellipse,path,text").forEach((r,n)=&gt;{let o=r.getAttribute("id");o||(o="patchjs_shape"+n,r.setAttribute("id",o));const i=r.style.fill.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/),a=r.style.stroke.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;"meshgradient"===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,"canvas");d(l,{width:i.width,height:i.height});const c=l.getContext("2d");let u=c.createImageData(i.width,i.height);const f=new b(a);"objectBoundingBox"===a.getAttribute("gradientUnits")&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute("gradientTransform");null!=p&amp;&amp;f.transform(h(p)),"userSpaceOnUse"===a.getAttribute("gradientUnits")&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,"image");d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,"xlink:href",g),r.parentNode.insertBefore(y,r),r.style.fill="none";const w=document.createElementNS(t,"use");w.setAttributeNS(e,"xlink:href","#"+o);const m="patchjs_clip"+n,M=document.createElementNS(t,"clipPath");M.setAttribute("id",m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute("clip-path","url(#"+m+")"),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;"meshgradient"===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute("stroke-miterlimit"))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,"canvas");d(p,{width:l,height:c});const y=p.getContext("2d");let g=y.createImageData(l,c);const w=new b(o);"objectBoundingBox"===o.getAttribute("gradientUnits")&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute("gradientTransform");null!=m&amp;&amp;w.transform(h(m)),"userSpaceOnUse"===o.getAttribute("gradientUnits")&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,"image");d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,"xlink:href",S);const k="pattern_clip"+n,A=document.createElementNS(t,"pattern");d(A,{id:k,patternUnits:"userSpaceOnUse",width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke="url(#"+k+")",g=null,p=null,S=null}}})}();</script>
</svg>
